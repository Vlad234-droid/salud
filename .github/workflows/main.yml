name: CI

on:
  push:
    branches: [ '*' ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 'Fetch codebase'
        uses: actions/checkout@v2
      - name: 'Build production ready application'
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      # temporary set CI as false to test build
      - run: CI=false npm run build

      - name: 'Store build'
        uses: actions/upload-artifact@v2
        with:
          name: production-build
          path: build/

  deploy_dev:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: production-build
      - name: push code to server
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.DEVDEPLOYMENTKEY }}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan ${{ secrets.DEVDEPLOYMENTHOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          rsync -a --chmod=D2775,F664 --delete "$GITHUB_WORKSPACE"/ ${{ secrets.DEVDEPLOYMENTUSER }}@${{ secrets.DEVDEPLOYMENTHOST }}:${{ secrets.DEV_DEPLOYMENT_PATH }}
